---
name: Lint, build & test
on:
  push:
    branches:
      - master
      - renovate/**
    paths-ignore:
      - "**.md"
      - "test/**"
      - ".gitignore"
  pull_request:
    branches:
      - master
    paths-ignore:
      - "**.md"
      - "test/**"
      - ".gitignore"

concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.4.0

      - name: Setup Python
        uses: actions/setup-python@v2.3.1
        with:
          python-version: "3.10"

      - name: Install Poetry
        uses: snok/install-poetry@v1.3.0
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached Poetry virtual env
        uses: actions/cache@v2.1.6
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install poetry dependencies
        run: poetry install

      - name: Lint Ansible sources
        run: poetry run ansible-lint

      - uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: 1.1.2

      - name: Lint terraform sources
        run: terraform fmt -recursive --check

      - name: Prepare terraform secrets
        working-directory: tests/terraform/
        run: echo "${{ secrets.DO_TOKEN }}" > .do-token.txt

      - name: Create terraform resources for test
        working-directory: tests/terraform/
        run: terraform init && terraform apply -auto-approve

      - name: Run tests
        working-directory: tests/
        run: poetry run ansible-playbook -i inventory test.yml

      - name: Delete terraform resources
        working-directory: tests/terraform/
        if: ${{ always() }}
        run: terraform destroy -auto-approve

      - name: Delete terraform secrets
        working-directory: tests/terraform/
        if: ${{ always() }}
        run: rm -rf .do-token.txt
